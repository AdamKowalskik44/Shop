@using Shop.Data.ProductTypes
@using Shop.Data
@inject NavigationManager navigationManager

<div class="row p-1 m-1 border row">
    <div class="col-3" style="padding-left: 0px; padding-right:0px">
        @if (ProductDTO.GetMainPhoto() != null)
        {
            <ImageDisplay Image="ProductDTO.GetMainPhoto().Image" Width="150"></ImageDisplay>
        }
    </div>
    <div class="d-flex align-items-start flex-column col-9">
        <div class="mb-auto p-2 container row" style="padding-left:0px">
            <div class="col float-left">
                <h3 class="btn" style="color:#78C2AD; position:absolute; top:0; left:0; padding:0" @onclick="NavigateToProduct">@ProductDTO.Product.ProductName</h3>
                <h7 style="color:#78C2AD; position:absolute; bottom:0; left:0">@ProductDTO.Product.Price</h7>
            </div>
            <div class="col float-right">
                @if (CartEntry.Quantity <= ProductDTO.Product.Stock)
                {
                    <input class="form-control m-1 float-right" style="width:150px" type="number" min="1" max=@ProductDTO.Product.Stock @bind="CartEntry.Quantity">

                }
                else
                {
                    <input class="form-control m-1 float-right is-invalid" style="width:150px" type="number" min="1" max=@ProductDTO.Product.Stock @bind="CartEntry.Quantity">
                }
                <p class="float-right m-1">On stock: @ProductDTO.Product.Stock</p>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ProductDTO ProductDTO { get; set; }

    [Parameter]
    public CartEntry CartEntry { get; set; }

    private void NavigateToProduct()
    {
        navigationManager.NavigateTo("/Browse/Product/" + ProductDTO.Product.ProductId);
    }
}
